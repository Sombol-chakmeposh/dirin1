# -*- coding: utf-8 -*-
"""Untitledsmart22.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1q92w6U_Ocpt5NFgeOqOzIkZK1HMGZoUa
"""

import numpy as np

# Ask the user for the number of columns
cols = input()
try:
    cols = int(cols)
    if cols <= 0:
        raise ValueError
except ValueError:
    exit()

# Create a 2D array of characters with 5 rows and cols columns
matrix = np.full((5, cols), ".")

# Create a variable to store the current position
row = 0
col = 0

# Mark the starting position with an asterisk
matrix[row][col] = "*"

# Create a variable to store the number of steps
steps = 0

# Create a loop that asks the user for an input
while True:
    # Check if the user has reached the bottom-right corner
    if row == len(matrix) - 1 and col == len(matrix[0]) - 1:
        # Print a congratulatory message
        print("You have reached the end of the matrix. Congratulations!")
        # Skip the rest of the loop
        continue

    direction = input()

    if direction not in ["R", "L", "B", "END"]:
        continue

    if direction == "R":
        col += 1
    elif direction == "L":
        col -= 1
    elif direction == "B":
        row += 1
    elif direction == "END":
        print("You have quit the game. Goodbye!")
        break

    # Check if the new position is within the bounds of the matrix
    if row < 0 or row >= len(matrix) or col < 0 or col >= len(matrix[0]):
        # Print a warning message
        print("You have reached the edge of the matrix. You cannot move further in that direction.")
        # Undo the position update
        if direction == "R":
            col -= 1
        elif direction == "L":
            col += 1
        elif direction == "B":
            row -= 1
        # Skip the rest of the loop
        continue

    # Mark the new position with an asterisk
    matrix[row][col] = "*"

    # Increment the number of steps
    steps += 1

if '*' not in matrix[:, -1]:
    print("There's no way out!")

for r in matrix:
    if '*' in r:
        print(' '.join(r))